--VHDL code
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;
entity usr is
    Port ( Clk,rst,sin : in  STD_LOGIC;
           m : in  STD_LOGIC_VECTOR (1 downto 0);
           pin : in  STD_LOGIC_VECTOR (3 downto 0);
           sout : out  STD_LOGIC;
           pout : out  STD_LOGIC_VECTOR (3 downto 0));
end usr;

architecture Behavioral of usr is
signal p1,p2:std_logic_vector(3 downto 0);
signal s1:std_logic;
begin
process(clk,rst,pin,sin,m)                         
begin
if(rst='1') then 
     p1<="0000";
     p2<="0000";
     s1<='0';
elsif (clk'event and clk='1') then
	if(m="00") then     --SISO
	p1(0)<=sin;
	p1(1)<=p1(0);
	p1(2)<=p1(1);
	p1(3)<=p1(2);
	 s1<=p1(3);

elsif(m="01") then   --SIPO
             p1(0)<=sin;
	p1(1)<=p1(0);
	p1(2)<=p1(1);
	p1(3)<=p1(2);
	   p2<=p1;
elsif(m="10") then   --PIPO
	   p1<=pin;
	   p2<=p1;
else                 --PISO
         p1<=pin;
         s1<=p1(3);
end if;
end if;
end process;
pout<=p2;
sout<=s1;
end Behavioral;




-----------------------------------------------------------
--Testbench
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY usr_tb IS
END usr_tb;
 
ARCHITECTURE behavior OF usr_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT usr
    PORT(
         Clk : IN  std_logic;
         rst : IN  std_logic;
         sin : IN  std_logic;
         m : IN  std_logic_vector(1 downto 0);
         pin : IN  std_logic_vector(3 downto 0);
         sout : OUT  std_logic;
         pout : OUT  std_logic_vector(3 downto 0)
        );
    END COMPONENT;
       --Inputs
   signal Clk : std_logic := '0';
   signal rst : std_logic := '0';
   signal sin : std_logic := '0';
   signal m : std_logic_vector(1 downto 0) := (others => '0');
   signal pin : std_logic_vector(3 downto 0) := (others => '0');

 	--Outputs
   signal sout : std_logic;
   signal pout : std_logic_vector(3 downto 0);

   -- Clock period definitions
   constant Clk_period : time := 20 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: usr PORT MAP (
          Clk => Clk,
          rst => rst,
          sin => sin,
          m => m,
          pin => pin,
          sout => sout,
          pout => pout
        );

   -- Clock process definitions
   Clk_process :process
   begin
		Clk <= '0';
		wait for Clk_period/2;
		Clk <= '1';
		wait for Clk_period/2;
   end process;
 

rst_process :process
   begin
		rst <= '1';
		wait for Clk_period;
		rst <= '0';
		wait;
   end process;
	
	
   -- Stimulus process
   stim_proc: process
   begin		
                 pin<="1001";
	   sin<='1';	
	   m<="00”;     -- SISO
	   wait for 120 ns;
	
              pin<="1101";
	sin<='1';
	m<="01";   -- SIPO
              wait for 120 ns;
	
	pin<="1101";   --PIPO
	m<="10";
               wait for 120 ns; 
	
	pin<="0100";    -- PISO
	m<="11";
              wait; 
        end process;
END; 




-----------------------------------------------------------
--changes for Implementation code

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;
entity usr is
    Port ( Clk,rst,sin : in  STD_LOGIC;
           m : in  STD_LOGIC_VECTOR (1 downto 0);
           pin : in  STD_LOGIC_VECTOR (3 downto 0);
           sout : out  STD_LOGIC;
           pout : out  STD_LOGIC_VECTOR (3 downto 0));
end usr;

architecture Behavioral of usr is
signal p1,p2:std_logic_vector(3 downto 0);
signal s1:std_logic;
signal temp:std_logic_vector(22 downto 0);  
signal sclk:std_logic;
begin
p11: process(clk,rst)
	begin
	if(rst='1')then temp<=(others=>'0');
		elsif(clk'event and clk='1') then
		temp<= temp + 1;
		end if;
	end process;
	sclk<=temp(22);

p22:process(sclk,rst,pin,sin,m)                         
begin
if(rst='1') then 
     p1<="0000";
     p2<="0000";
	  s1<='0';
elsif (sclk'event and sclk='1') then
	if(m="00") then     --SISO
	p1(0)<=sin;
	p1(1)<=p1(0);
	p1(2)<=p1(1);
	p1(3)<=p1(2);
	s1<=p1(3);
elsif (m="01") then   --SIPO
             p1(0)<=sin;
	p1(1)<=p1(0);
	p1(2)<=p1(1);
	p1(3)<=p1(2);
	   p2<=p1;
elsif(m="10") then   --PIPO
	   p1<=pin;
	   p2<=p1;
else                 --PISO
         p1<=pin;
         s1<=p1(3);
end if;
end if;
end process;
pout<=p2;
sout<=s1;
end Behavioral;




----------------------------------------------------------------------------------------------------
--Implementation UCF File
NET "CLK"   LOC = "L15"; # Bank = 1, Pin name = IO_L42P_GCLK7_M1UDM, Type = GCLK, Sch name = GCLK


# onBoardLeds
NET "pout<0>" LOC = "U18"; # Bank = 1, Pin name = IO_L52N_M1DQ15,  Sch name = LD0
NET "pout<1>" LOC = "M14"; # Bank = 1, Pin name = IO_L53P,  Sch name = LD1
NET "pout<2>" LOC = "N14"; # Bank = 1, Pin name = IO_L53N_VREF,  Sch name = LD2
NET "pout<3>" LOC = "L14"; # Bank = 1, Pin name = IO_L61P,  Sch name = LD3
NET "Sout" LOC = "M13"; # Bank = 1, Pin name = IO_L61N,  Sch name = LD4
# onBoard SWITCHES
 NET "pin<0>" LOC = "A10"; # Bank = 0, Pin name = IO_L37N_GCLK12,  Sch name = SW0
 NET "pin<1>" LOC = "D14"; # Bank = 0, Pin name = IO_L65P_SCP3,  Sch name = SW1
 NET "pin<2>" LOC = "C14"; # Bank = 0, Pin name = IO_L65N_SCP2,  Sch name = SW2
 NET "pin<3>" LOC = "P15"; # Bank = 1, Pin name = IO_L74P_AWAKE_1,  Sch name = SW3
 NET "sin" LOC = "P12"; # Bank = 2, Pin name = IO_L13N_D10,  Sch name = SW4
 NET "rst" LOC = "R5";  # Bank = 2, Pin name = IO_L48P_D7,  Sch name = SW5
 NET "m<0>" LOC = "T5";  # Bank = 2, Pin name = IO_L48N_RDWR_B_VREF_2, Sch name = SW6
 NET "m<1>" LOC = "E4";  # Bank = 3, Pin name = IO_L54P_M3RESET,  Sch name = SW7
