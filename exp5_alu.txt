--VHDL Code
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity alu_lab8  is
    Port (A,B : in  STD_LOGIC_VECTOR (1 downto 0);
           sel : in  STD_LOGIC_VECTOR (2 downto 0);
           Y : out  STD_LOGIC_VECTOR (1 downto 0));
end alu_lab8;

architecture Behavioral of alu_lab8  is                                                                                                        
begin
process(A,B,sel)
  begin
     case sel is
 when "000" => Y <=A+B;
 when "001" => Y <=A-B;
 when "010" => Y <=A AND B;
 when "011" => Y <=A NAND B;
 when "100" => Y <=A XOR B;
 when "101" => Y <=A XNOR B;
 when "110" => Y <=A OR B;
 when "111" => Y <=A;
 when others => Y <="ZZZZZZZZ";
    end case;
end process;
end Behavioral;




--------------------------------------------------------------
--Testbench
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
  
ENTITY alu IS
END alu;

 ARCHITECTURE behavior OF alu IS 

    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT alu_lab8
    PORT(
         A : IN  std_logic_vector(7 downto 0);
         B : IN  std_logic_vector(7 downto 0);
         sel : IN  std_logic_vector(2 downto 0);
         Y : OUT  std_logic_vector(7 downto 0)
        );
    END COMPONENT;
       --Inputs
   signal A : std_logic_vector(7 downto 0) := (others => '0');
   signal B : std_logic_vector(7 downto 0) := (others => '0');
   signal sel : std_logic_vector(2 downto 0) := (others => '0');
 	--Outputs
   signal Y : std_logic_vector(7 downto 0);
   
BEGIN
 	-- Instantiate the Unit Under Test (UUT)
   uut: alu_lab8 PORT MAP (
          A => A,
          B => B,
          sel => sel,
          Y => Y
        );
PROCESS
	BEGIN
	B<="01000100";
            	A<="10110011";
sel<="000";
	    wait for 20ns;
	sel<="001";
                wait for 20ns;
	sel<="010";
                wait for 20ns;
	sel<="011";
                 wait for 20ns;
	sel<="100";
                wait for 20ns;
	sel<="101";
               wait for 20ns;
	sel<="110";
               wait for 20ns;
	sel<="111";
      wait;
   end process;
END;




-----------------------------------------------------
--Changes for implementation (2bit alu)
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity Expt_1b is
    Port ( A : in  STD_LOGIC_VECTOR(1 downto 0);
           B : in  STD_LOGIC_VECTOR(1 downto 0);
           sel : in  STD_LOGIC_VECTOR(2 downto 0);
           Y : out  STD_LOGIC_VECTOR(1 downto 0));
end Expt_1b;

architecture Behavioral of Expt_1b is
begin
process(A,B,sel)
  begin
     case sel is
 when "000" => Y <=A+B;
 when "001" => Y <=A-B;
 when "010" => Y <=A AND B;
 when "011" => Y <=A NAND B;
 when "100" => Y <=A XOR B;
 when "101" => Y <=A XNOR B;
 when "110" => Y <=A OR B;
 when "111" => Y <=A;
 when others => Y <="ZZ";
    end case;
end process;
end Behavioral;




---------------------------------------------
--Implementation
Net"A<0>"LOC="A10";
Net"A<1>"LOC="D14";
Net"B<0>"LOC="C14";
Net"B<1>"LOC="P15";
Net"SEL<0>"LOC="P12";
Net"SEL<1>"LOC="R5";
Net"SEL<2>"LOC="T5";
Net"Y<0>"LOC="U18";
Net"Y<1>"LOC="M14";
